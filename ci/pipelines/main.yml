groups:
- jobs:
  - create-dev-release
  - test-develop-integration
  - promote-to-beta
  - promote-to-rc
  - shipit
  name: all
- jobs:
  - bump-major
  - bump-minor
  - bump-patch
  name: ci-state
jobs:
- name: create-dev-release
  plan:
  - get: repo
    trigger: true
  - task: create-de
    file: repo/ci/tasks/create-dev-release-tarball.yml
  - put: alpha-bosh-release-tarball
    params:
      files:
      - release/*.tgz
      version: release/version
    get_params:
      skip_download: true
- name: test-develop-integration
  serial: true
  plan:
  - aggregate:
    - get: release
      resource: alpha-bosh-release-tarball
      trigger: true
      passed:
      - create-dev-release
    - get: repo
      passed:
      - create-dev-release
  - put: integration-github-status
    params:
      commit: repo
      state: pending
  - file: repo/ci/tasks/integration-test/task.yml
    task: integration-test
    privileged: true
    on_failure:
      put: integration-github-status
      params:
        commit: repo
        state: failure
    on_success:
      put: integration-github-status
      params:
        commit: repo
        state: success
- name: promote-to-beta
  plan:
  - aggregate:
    - get: release
      resource: alpha-bosh-release-tarball
      trigger: true
      passed:
      - test-develop-integration
    - get: repo
      passed:
      - test-develop-integration
  - put: beta-bosh-release-tarball
    params:
      metalink: release/.resource/metalink.meta4
    get_params:
      skip_download: true
- name: promote-to-rc
  plan:
  - aggregate:
    - get: release
      resource: beta-bosh-release-tarball
      passed:
      - promote-to-beta
    - get: repo
      passed:
      - promote-to-beta
  - put: rc-bosh-release-tarball
    params:
      metalink: release/.resource/metalink.meta4
    get_params:
      skip_download: true
- name: shipit
  serial_groups:
  - version
  plan:
  - get: repo
    passed:
    - promote-to-rc
  - get: rc-bosh-release-tarball
    passed:
    - promote-to-rc
  - get: version
  - do:
    - put: bosh-release
      params:
        tarball: rc-bosh-release-tarball/*.tgz
        version: version/version
    - put: bosh-release-tarball
      params:
        files:
        - bosh-release/*.tgz
        version: bosh-release/version
      get_params:
        skip_download: true
    - task: build-release-metadata
      file: repo/ci/tasks/build-release-metadata.yml
    - put: github-release
      params:
        name: release-metadata/name
        tag: release-metadata/tag
        body: release-metadata/notes.md
    ensure:
      put: version
      params:
        bump: patch
- name: bump-major
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: major
- name: bump-minor
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: minor
- name: bump-patch
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: patch
resources:
- name: repo
  type: git
  source: &repo
    branch: master
    private_key: ((git_private_key))
    uri: git@github.com:dpb587/openvpn-bosh-release.git
- name: version
  type: semver
  source:
    <<: *repo
    driver: git
    branch: ci-state
    file: version/master
- name: bosh-release
  type: bosh-release
  source: *repo
- name: github-release
  type: github-release
  source:
    owner: dpb587
    repository: openvpn-bosh-release
    access_token: ((github_access_token))
- name: alpha-bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/openvpn-bosh-release.git//release/alpha#artifacts
- name: beta-bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/openvpn-bosh-release.git//release/beta#artifacts
- name: rc-bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/openvpn-bosh-release.git//release/rc#artifacts
- name: bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/openvpn-bosh-release.git//release/stable#artifacts
- name: integration-github-status
  type: github-status
  source:
    access_token: ((github_access_token))
    branch: master
    context: ci/integration
    repository: dpb587/openvpn-bosh-release
resource_types:
- name: bosh-release
  type: docker-image
  source:
    repository: dpb587/bosh-release-resource
- name: github-status
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: metalink-repository
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource
shared:
  release_artifacts: &release_artifacts
    mirror_files:
    - destination: s3://s3-external-1.amazonaws.com/dpb587-bosh-release-openvpn-us-east-1/artifacts/release/{{.SHA1}}
      env:
        AWS_ACCESS_KEY_ID: ((artifacts_s3_access_key))
        AWS_SECRET_ACCESS_KEY: ((artifacts_s3_secret_key))
    options:
      private_key: ((git_private_key))
