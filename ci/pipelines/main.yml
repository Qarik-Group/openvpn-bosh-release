groups:

- jobs:
  - create-dev-release
  - test-develop-integration
  - shipit
  - bump-major
  - bump-minor
  - bump-patch
  name: all

- jobs:
  - ci-bosh-image
  name: meta

jobs:

- name: create-dev-release
  serial: true
  plan:
  - aggregate:
    - get: repo
      trigger: true
    - get: version
  - file: repo/ci/tasks/create-dev-release/task.yml
    task: create-release
    params:
      s3_host: ((artifacts_s3_host))
      s3_bucket: ((artifacts_s3_bucket))
      s3_prefix: ((artifacts_s3_prefix))release/
      s3_access_key: ((artifacts_s3_access_key))
      s3_secret_key: ((artifacts_s3_secret_key))
  - put: artifacts-release-alpha
    params:
      metalink: /tmp/build/put/dev-release/*.meta4
      options:
        author_name: ((maintainer_name))
        author_email: ((maintainer_email))
        message: "release/alpha: new build"
    get_params:
      skip_download: true

- name: test-develop-integration
  serial: true
  plan:
  - aggregate:
    - get: release
      resource: artifacts-release-alpha
      trigger: true
      passed:
      - create-dev-release
    - get: repo
      passed:
      - create-dev-release
  - put: integration-github-status
    params:
      commit: repo
      state: pending
  - file: repo/ci/tasks/integration-test/task.yml
    task: integration-test
    privileged: true
    on_failure:
      put: integration-github-status
      params:
        commit: repo
        state: failure
    on_success:
      put: integration-github-status
      params:
        commit: repo
        state: success

- name: shipit
  serial_groups:
  - version
  plan:
  - aggregate:
    - get: artifacts-release-alpha
      passed:
      - test-develop-integration
    - get: source-repo
      resource: repo
      passed:
      - test-develop-integration
    - get: repo
      resource: finalize-repo
    - get: version
      params:
        bump: final
  - task: finalize-release
    file: repo/ci/tasks/finalize-release/task.yml
    params:
      blobstore_s3_access_key_id: ((blobstore_access_key))
      blobstore_s3_secret_access_key: ((blobstore_secret_key))
      git_user_email: ((maintainer_email))
      git_user_name: ((maintainer_name))
      s3_host: ((artifacts_s3_host))
      s3_bucket: ((artifacts_s3_bucket))
      s3_prefix: ((artifacts_s3_prefix))release/
      s3_access_key: ((artifacts_s3_access_key))
      s3_secret_key: ((artifacts_s3_secret_key))
  - do:
    - put: version
      params:
        file: version/number
    - put: version
      params:
        bump: patch
  - put: finalize-repo
    params:
      rebase: true
      repository: repo
  - put: repo
    params:
      repository: source-repo
      only_tag: true
      tag: github-release/name
      annotate: github-release/name
  - put: artifacts-release-stable
    params:
      metalink: /tmp/build/put/release/*.meta4
      options:
        author_name: ((maintainer_name))
        author_email: ((maintainer_email))
        message: "release/stable: new build"
    get_params:
      skip_download: true
  - put: github-release
    params:
      body: github-release/notes.md
      commitish: github-release/commit
      name: github-release/name
      tag: github-release/name

- name: bump-major
  serial_groups:
  - version
  plan:
  - get: version
    params:
      bump: major
      pre: dev
  - put: version
    params:
      file: version/number
- name: bump-minor
  serial_groups:
  - version
  plan:
  - get: version
    params:
      bump: minor
      pre: dev
  - put: version
    params:
      file: version/number
- name: bump-patch
  serial_groups:
  - version
  plan:
  - get: version
    params:
      bump: patch
      pre: dev
  - put: version
    params:
      file: version/number

- name: ci-bosh-image
  serial: true
  plan:
  - get: images-repo
    trigger: true
  - put: ci-bosh-image
    params:
      build: images-repo/ci/images/bosh
    get_params:
      skip_download: true

resources:
- name: artifacts-release-alpha
  type: metalink-repository
  source:
    uri: git+ssh://git@github.com:dpb587/openvpn-bosh-release.git//release/alpha#artifacts
    options:
      private_key: ((git_private_key))

- name: artifacts-release-stable
  type: metalink-repository
  source:
    uri: git+ssh://git@github.com:dpb587/openvpn-bosh-release.git//release/stable#artifacts
    options:
      private_key: ((git_private_key))

- name: github-release
  type: github-release
  source:
    access_token: ((github_access_token))
    repository: openvpn-bosh-release
    user: dpb587
- name: repo
  type: git
  source:
    branch: master
    private_key: ((git_private_key))
    uri: git@github.com:dpb587/openvpn-bosh-release.git
- name: finalize-repo
  type: git
  source:
    branch: master
    private_key: ((git_private_key))
    uri: git@github.com:dpb587/openvpn-bosh-release.git

- name: version
  type: semver
  source:
    access_key_id: ((blobstore_access_key))
    bucket: dpb587-bosh-release-openvpn-us-east-1
    key: version
    secret_access_key: ((blobstore_secret_key))

- name: integration-github-status
  type: github-status
  source:
    access_token: ((github_access_token))
    branch: master
    context: ci/integration
    repository: dpb587/openvpn-bosh-release

- name: images-repo
  type: git
  source:
    branch: master
    paths:
    - ci/images/*
    - ci/images/**/*
    private_key: ((git_private_key))
    uri: git@github.com:dpb587/openvpn-bosh-release.git
- name: ci-bosh-image
  type: docker-image
  source:
    email: ((docker_email))
    password: ((docker_password))
    repository: dpb587/openvpn-bosh-release
    tag: ci-bosh-master
    username: ((docker_username))

resource_types:

- name: github-status
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: metalink-repository
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource
